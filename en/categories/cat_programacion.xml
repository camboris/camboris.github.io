<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basta que sea (Posts about programación)</title><link>https://camboris.github.io/</link><description></description><atom:link href="https://camboris.github.io/en/categories/cat_programacion.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 15 Mar 2017 00:04:57 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Haxe JS | Externs + LowDb</title><link>https://camboris.github.io/en/posts/haxe-js-externs-%2B-lowdb/</link><dc:creator>Cam Boris</dc:creator><description>&lt;div&gt;&lt;p&gt;Estoy probando cosas en Js últimamente y no me gustan mucho babel y parientes. Permiten usar características avanzadas del lenguaje, pero al final del día, sigue siendo Js. :)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://haxe.org/"&gt;Haxe&lt;/a&gt; nos permite tener un compilador real validando nuestro código, además de sus características específicas como: Macros, enums, tipos de datos abstractos, etc.&lt;/p&gt;
&lt;p&gt;Para poder usar &lt;a class="reference external" href="http://haxe.org/"&gt;Haxe&lt;/a&gt; con Js y acceder a librerías externas tenemos que usar Externs. Son definiciones de los métodos que proveen estas librerías de terceros en un formato que le permite a &lt;a class="reference external" href="http://haxe.org/"&gt;Haxe&lt;/a&gt; validar tipos de datos, estructuras y demases. Para estas pruebas voy a usar &lt;a class="reference external" href="https://nodejs.org/en/"&gt;Node&lt;/a&gt;, ya que me permite probar de manera rápida y sencilla el código sin tener que armar una página web para ejecutar en el browser.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://camboris.github.io/en/posts/haxe-js-externs-%2B-lowdb/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://camboris.github.io/en/posts/haxe-js-externs-%2B-lowdb/</guid><pubDate>Thu, 09 Mar 2017 01:27:24 GMT</pubDate></item><item><title>BCF - Boris CSS Framework</title><link>https://camboris.github.io/en/posts/bcf-boris-css-framework/</link><dc:creator>Cam Boris</dc:creator><description>&lt;div&gt;&lt;p&gt;Hace poco estaba armando un pequeño sitio de prueba y me encontré con que iba a necesitar un sistema de grillas. Viendo un poco la oferta de frameworks y sistemas de grillas para CSS, llegué a la conclusión que al mundo le faltaba un framework más. Y le puse mi nombre, no podía ser de otra manera...&lt;/p&gt;
&lt;p&gt;Así nació, el &lt;a class="reference external" href="https://github.com/camboris/bcf"&gt;Boris CSS Framework&lt;/a&gt;, aunque debo admitir que acepto sugerencias para el nombre, siempre que incluyan el Boris :)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://camboris.github.io/en/posts/bcf-boris-css-framework/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://camboris.github.io/en/posts/bcf-boris-css-framework/</guid><pubDate>Sat, 21 May 2016 13:00:27 GMT</pubDate></item><item><title>Haxe + JS 01</title><link>https://camboris.github.io/en/posts/haxe-%2B-js-01/</link><dc:creator>Cam Boris</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="http://haxe.org/"&gt;Haxe&lt;/a&gt; es un lenguaje muy atractivo, por un lado su facilidad para aprenderlo, ya que su sintaxis es muy similar a EcmaScript, y por el otro su capacidad de escribir otros lenguajes. Es tanto un lenguaje como un compilador.&lt;/p&gt;
&lt;p&gt;Además de soportar características avanzadas como el soporte para macros, lo que más me gusta es lo simple que hace escribir un gran rango de aplicaciones, desde juegos para la plataforma que queramos, a frontends en js o backends en js o php.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://camboris.github.io/en/posts/haxe-%2B-js-01/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://camboris.github.io/en/posts/haxe-%2B-js-01/</guid><pubDate>Sat, 02 Apr 2016 19:49:50 GMT</pubDate></item><item><title>Linting de js en Neovim</title><link>https://camboris.github.io/en/posts/linting-de-js-en-neovim/</link><dc:creator>Cam Boris</dc:creator><description>&lt;div&gt;&lt;p&gt;Reescribiendo mi configuración de &lt;a class="reference external" href="http://neovim.org/"&gt;Neovim&lt;/a&gt;, porque eso hago los fines de semana largos, reemplacé &lt;a class="reference external" href="https://github.com/Valloric/YouCompleteMe"&gt;YouCompleteMe&lt;/a&gt; con &lt;a class="reference external" href="https://github.com/Shougo/deoplete.nvim"&gt;Deoplete&lt;/a&gt; y &lt;a class="reference external" href="https://github.com/scrooloose/syntastic"&gt;Syntastic&lt;/a&gt; por &lt;a class="reference external" href="https://github.com/benekastah/neomake"&gt;Neomake&lt;/a&gt;, me encuentro haciendo algunas cosas en js y no tengo linting habilitado.&lt;/p&gt;
&lt;p&gt;Ternjs es una posiblidad, pero siempre encuentro que configurarlo es tedioso para cosas chicas, así que busqué otras opciones.&lt;/p&gt;
&lt;p&gt;Neomake soporta varios compiladores o linters de js para informar los errores, lo que llaman "Makers".&lt;/p&gt;
&lt;p&gt;&lt;a href="https://camboris.github.io/en/posts/linting-de-js-en-neovim/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://camboris.github.io/en/posts/linting-de-js-en-neovim/</guid><pubDate>Thu, 24 Mar 2016 15:04:51 GMT</pubDate></item></channel></rss>